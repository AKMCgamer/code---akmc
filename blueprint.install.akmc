#!/bin/bash

# AKMC ASCII Art with Gradient
echo -e "\n\033[1;36m"
cat << "EOF"

  █████  ██   ██ ███    ███  ██████ 
██   ██ ██  ██  ████  ████ ██      
███████ █████   ██ ████ ██ ██      
██   ██ ██  ██  ██  ██  ██ ██      
██   ██ ██   ██ ██      ██  ██████ 
                                   
                                                     
 🤍 Framework Installer - github.com/AKMC

EOF
echo -e "\033[0m"

# Hide all command outputs
exec 3>&1  # Save original stdout
exec > /dev/null 2>&1

# Installation Steps
commands=(
  "sudo apt-get install -y ca-certificates curl gnupg"
  "sudo mkdir -p /etc/apt/keyrings"
  "curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg"
  "echo \"deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main\" | sudo tee /etc/apt/sources.list.d/nodesource.list"
  "sudo apt-get update"
  "sudo apt-get install -y nodejs"
  "sudo npm i -g yarn"
  "cd /var/www/pterodactyl"
  "yarn"
  "sudo apt install -y zip unzip git curl wget"
  "wget \"\$(curl -s https://api.github.com/repos/BlueprintFramework/framework/releases/latest | grep 'browser_download_url' | cut -d '\"' -f 4)\" -O release.zip"
  "unzip release.zip"
  "chmod +x blueprint.sh"
  "bash blueprint.sh"
)

# Initialize variables
total_steps=${#commands[@]}
start_time=$(date +%s)
completed=0

# Function to display progress
show_progress() {
    local current=$1
    local total=$2
    local elapsed=$(( $(date +%s) - start_time ))
    local avg_time=$(( elapsed / (current > 0 ? current : 1) ))
    local remaining=$(( (total - current) * avg_time ))
    
    # Calculate percentage
    local percentage=$(( (current * 100) / total ))
    
    # Progress bar
    local bar_length=30
    local filled=$(( bar_length * current / total ))
    local bar=$(printf "%${filled}s" | tr ' ' '■')
    local empty=$(printf "%$(( bar_length - filled ))s" | tr ' ' '□')
    
    # Time formatting
    local mins=$(( remaining / 60 ))
    local secs=$(( remaining % 60 ))
    
    # Display everything
    printf "\r\033[1;34mProgress: [%s%s] %d%% | Command %d/%d | ETA: %02d:%02d \033[0m" \
        "$bar" "$empty" "$percentage" "$current" "$total" "$mins" "$secs" >&3
}

# Execute commands with progress display
for i in "${!commands[@]}"; do
    show_progress $((i+1)) $total_steps
    eval "${commands[$i]}"
    if [ $? -ne 0 ]; then
        echo -e "\n\033[1;31mError occurred at step $((i+1)). Aborting installation.\033[0m" >&3
        exit 1
    fi
done

# Show 100% completion
show_progress $total_steps $total_steps
echo -e "\n\n\033[1;32mInstallation completed successfully! 🎉\033[0m" >&3
echo -e "\033[38;5;105m           Made by \033[38;5;99mA\033[38;5;93mK\033[38;5;87mM\033[38;5;81mC\033[0m" >&3
echo -e "\033[1;35m       github.com/AKMC\033[0m" >&3

# Restore original stdout
exec 1>&3 3>&-
